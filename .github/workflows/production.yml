name: 'Production Deployment ðŸš€'

env:
  REGISTRY: ${{secrets.REGISTRY}}
  REGISTRY_USER: ${{secrets.PRODUCTION_REGISTRY_USER}}
  REGISTRY_TOKEN: ${{secrets.PRODUCTION_REGISTRY_PASS}}
  PORTAINER_WEBHOOK: ${{secrets.PRODUCTION_CONTAINER_WEBHOOK}}
  NAMESPACE: release
  APP_NAME: celmysql-api
  TAG: latest

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  production_deploy:
    runs-on: self-hosted
    environment:
      name: "celmysql-api Production"
      url: "https://celmysql-api.thisisruri.my.id"
    steps:
      - uses: actions/checkout@v3
      - name: Login -> Docker
        run: docker login -u $REGISTRY_USER -p $REGISTRY_TOKEN $REGISTRY
      - name: Docker Containerize -> (BUILD & PUSH)
        run: |
          docker build --pull -t "$REGISTRY/$NAMESPACE/$APP_NAME:$TAG" .
          docker push "$REGISTRY/$NAMESPACE/$APP_NAME:$TAG"
      - name: Call Portainer Webhook
        run: |
          curl -X POST $PORTAINER_WEBHOOK
      - name: Clean unused Images
        run: |
          echo '#!/bin/sh
          for tag in $(docker image ls --format '{{.Tag}}:{{.ID}}')
          do
              IFS=":" read -ra tags <<< "$tag"
              if [ "${tags[0]}" == "<none>" ]
              then
                  docker image rm -f "${tags[1]}"
              fi
          done' > prune.sh
          sudo chmod +x prune.sh
          ./prune.sh